// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserData should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserData
    hasErrored={
      Object {
        "hasErrored": false,
        "message": "nope",
      }
    }
    instances={90}
    loadingUser={
      Object {
        "loadingUser": true,
        "message": "Getting User Data",
      }
    }
    text="word"
    userData={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="header-spinner-box"
      >
        <div
          className="loading-spinner-circle"
        >
          <Loading
            className="username-spinner"
            color="#b7b7b7"
            delay={0}
            height={25}
            type="spokes"
            width={25}
          />
        </div>
      </div>,
      "className": "spinner-user-data",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="loading-spinner-circle"
        >
          <Loading
            className="username-spinner"
            color="#b7b7b7"
            delay={0}
            height={25}
            type="spokes"
            width={25}
          />
        </div>,
        "className": "header-spinner-box",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Loading
            className="username-spinner"
            color="#b7b7b7"
            delay={0}
            height={25}
            type="spokes"
            width={25}
          />,
          "className": "loading-spinner-circle",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "username-spinner",
            "color": "#b7b7b7",
            "delay": 0,
            "height": 25,
            "type": "spokes",
            "width": 25,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="header-spinner-box"
        >
          <div
            className="loading-spinner-circle"
          >
            <Loading
              className="username-spinner"
              color="#b7b7b7"
              delay={0}
              height={25}
              type="spokes"
              width={25}
            />
          </div>
        </div>,
        "className": "spinner-user-data",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="loading-spinner-circle"
          >
            <Loading
              className="username-spinner"
              color="#b7b7b7"
              delay={0}
              height={25}
              type="spokes"
              width={25}
            />
          </div>,
          "className": "header-spinner-box",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Loading
              className="username-spinner"
              color="#b7b7b7"
              delay={0}
              height={25}
              type="spokes"
              width={25}
            />,
            "className": "loading-spinner-circle",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "username-spinner",
              "color": "#b7b7b7",
              "delay": 0,
              "height": 25,
              "type": "spokes",
              "width": 25,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
