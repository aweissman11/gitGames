// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchBar should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBar
    loginPage={
      Object {
        "user": "me",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="git-games"
        >
          <div
            className="logo-box"
          >
            <p>
              <Link
                replace={false}
                to="/"
              >
                <ReactComponent
                  className="logo"
                />
              </Link>
            </p>
            <p>
              <Connect(SearchInput) />
            </p>
          </div>
        </div>,
        <div
          className="search-bar-user-data"
        >
          <Connect(UserData)
            loginPage={
              Object {
                "user": "me",
              }
            }
          />
        </div>,
      ],
      "className": "search-bar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="logo-box"
          >
            <p>
              <Link
                replace={false}
                to="/"
              >
                <ReactComponent
                  className="logo"
                />
              </Link>
            </p>
            <p>
              <Connect(SearchInput) />
            </p>
          </div>,
          "className": "git-games",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                <Link
                  replace={false}
                  to="/"
                >
                  <ReactComponent
                    className="logo"
                  />
                </Link>
              </p>,
              <p>
                <Connect(SearchInput) />
              </p>,
            ],
            "className": "logo-box",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/"
                >
                  <ReactComponent
                    className="logo"
                  />
                </Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <ReactComponent
                    className="logo"
                  />,
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "logo",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(SearchInput) />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "p",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Connect(UserData)
            loginPage={
              Object {
                "user": "me",
              }
            }
          />,
          "className": "search-bar-user-data",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "loginPage": Object {
              "user": "me",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="git-games"
          >
            <div
              className="logo-box"
            >
              <p>
                <Link
                  replace={false}
                  to="/"
                >
                  <ReactComponent
                    className="logo"
                  />
                </Link>
              </p>
              <p>
                <Connect(SearchInput) />
              </p>
            </div>
          </div>,
          <div
            className="search-bar-user-data"
          >
            <Connect(UserData)
              loginPage={
                Object {
                  "user": "me",
                }
              }
            />
          </div>,
        ],
        "className": "search-bar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="logo-box"
            >
              <p>
                <Link
                  replace={false}
                  to="/"
                >
                  <ReactComponent
                    className="logo"
                  />
                </Link>
              </p>
              <p>
                <Connect(SearchInput) />
              </p>
            </div>,
            "className": "git-games",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  <Link
                    replace={false}
                    to="/"
                  >
                    <ReactComponent
                      className="logo"
                    />
                  </Link>
                </p>,
                <p>
                  <Connect(SearchInput) />
                </p>,
              ],
              "className": "logo-box",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Link
                    replace={false}
                    to="/"
                  >
                    <ReactComponent
                      className="logo"
                    />
                  </Link>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <ReactComponent
                      className="logo"
                    />,
                    "replace": false,
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "logo",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(SearchInput) />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "p",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Connect(UserData)
              loginPage={
                Object {
                  "user": "me",
                }
              }
            />,
            "className": "search-bar-user-data",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "loginPage": Object {
                "user": "me",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
